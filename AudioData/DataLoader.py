from pytube import YouTube
from pydub import AudioSegment


# Import Youtube videos along with captions
def yt_import(url, filename=None, f_out='', captions=None, verbose=False):
    yt = YouTube(url)
    if not filename:  # we put the title as filename
        filename = yt.title

    if verbose:
        print(f'yt_import: Downloading {url} as {filename}.mp4.')
    yt.streams\
        .filter(progressive=True, file_extension='mp4')\
        .order_by('resolution')\
        .desc().first()\
        .download(output_path=f_out, filename=filename)

    if captions:  # download wanted captions
        for caption in captions:
            text = yt.captions[caption]
            if text:
                if verbose:
                    print(f'yt_import: Found caption {caption}, saving file.')
                with open(f'{filename}_{caption}.txt', "w") as text_file:
                    text_file.write(text.generate_srt_captions())
    return


def convert_audio(file, extension, bitrate, verbose=False):
    sample = AudioSegment.from_file('Caroe.mp4', format=extension)
    print(sample)
    return


# Test Loader capabilities
if __name__ == '__main__':

    # Enable debugging messages from functions
    debug = True

    # Test Youtube Importer we use this function to raise a Database from scratch
    print('Starting Loading Tests...')
    test_url = 'https://www.youtube.com/watch?v=eEOhx-u9Z2k'  # url to load
    fname = 'Caroe'  # base name of the output
    caption_list = ['a.es', 'es-419']  # we use autogenerated (a.es) and manually (es-419)
    yt_import(test_url, filename='Caroe', captions=['a.es', 'es-419'], verbose=debug)
    print('Loading done!')

    # Test Audio libraries: Transforming to 16kHz
    print('Starting Audio converter...')
    convert_audio('Caroe.mp4', 'mp4', 16000, verbose=debug)
    print('Converting done!')
